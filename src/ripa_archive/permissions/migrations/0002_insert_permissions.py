# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-06-11 16:40
from __future__ import unicode_literals

from django.db import migrations


def forwards_func(apps, schema_editor):
    Permission = apps.get_model("permissions", "Permission")
    PermissionTranslation = apps.get_model("permissions", "PermissionTranslation")

    # Folders
    perm = Permission.objects.create(code="can_read_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can read folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может просматривать дирректории")

    perm = Permission.objects.create(code="can_edit_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can edit folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может редактировать дирректории")

    perm = Permission.objects.create(code="can_delete_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can delete folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может удалять дирректории")

    perm = Permission.objects.create(code="can_create_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can create folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может создавать дирректории")

    perm = Permission.objects.create(code="can_set_custom_permissions_to_exist_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can set custom permissions to_exist folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может назначать права на существующие дирректории")

    perm = Permission.objects.create(code="can_set_custom_permissions_to_own_folders")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can set custom permissions to_own folders")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может назначать права на свои дирректории (созданные этим пользователем)")

    # Documents
    perm = Permission.objects.create(code="can_read_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can read documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может просматривать документы")

    perm = Permission.objects.create(code="can_edit_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can edit documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может редактировать документы")

    perm = Permission.objects.create(code="can_delete_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can delete documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может удалять докумнеты")

    perm = Permission.objects.create(code="can_create_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can create documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может создавать документы")

    perm = Permission.objects.create(code="can_set_custom_permissions_to_exist_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can set custom permissions to_exist documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может назначать права на существующие документы")

    perm = Permission.objects.create(code="can_set_custom_permissions_to_own_documents")
    PermissionTranslation.objects.create(permission=perm, language_code="en", name="Can set custom permissions to_own documents")
    PermissionTranslation.objects.create(permission=perm, language_code="ru", name="Может назначать права на свои документы (созданные этим пользователем)")


def reverse_func(apps, schema_editor):
    Permission = apps.get_model("permissions", "Permission")
    PermissionTranslation = apps.get_model("permissions", "PermissionTranslation")

    Permission.objects.all().delete()
    PermissionTranslation.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [
        ('permissions', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]
